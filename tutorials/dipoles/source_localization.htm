<!DOCTYPE html>
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<title>Part III: Localizing EEG sources</title>
<link rel="stylesheet" type="text/css" href="remark_files/remark.css" />
<link rel="stylesheet" type="text/css" href="remark_files/pygments.css" />
<script type="text/javascript" src="remark_files/ASCIIMathMLwFallback.js"></script>
<script type="text/javascript" src="remark_files/highslide/highslide-full.js"></script>
<link rel="stylesheet" type="text/css" href="remark_files/highslide/highslide.css" />
<script type="text/javascript">
hs.graphicsDir = 'remark_files/highslide/graphics/';
hs.showCredits = false;
</script>
<script type="text/javascript" src="remark_files/highslide/highslide-full.js"></script>
<link rel="stylesheet" type="text/css" href="remark_files/highslide/highslide.css" />
<script type="text/javascript">
hs.graphicsDir = 'remark_files/highslide/graphics/';
hs.showCredits = false;
</script>
<script type="text/javascript" src="remark_files/highslide/highslide-full.js"></script>
<link rel="stylesheet" type="text/css" href="remark_files/highslide/highslide.css" />
<script type="text/javascript">
hs.graphicsDir = 'remark_files/highslide/graphics/';
hs.showCredits = false;
</script>
<script type="text/javascript" src="remark_files/highslide/highslide-full.js"></script>
<link rel="stylesheet" type="text/css" href="remark_files/highslide/highslide.css" />
<script type="text/javascript">
hs.graphicsDir = 'remark_files/highslide/graphics/';
hs.showCredits = false;
</script>
<script type="text/javascript" src="remark_files/highslide/highslide-full.js"></script>
<link rel="stylesheet" type="text/css" href="remark_files/highslide/highslide.css" />
<script type="text/javascript">
hs.graphicsDir = 'remark_files/highslide/graphics/';
hs.showCredits = false;
</script>

</head>
<body>
<div id = "remark-all">
<div id = "remark">
<div class = "ParentList">

<ol>
<li><a href="tutorial_dipoles.htm">Simulating and estimating EEG sources</a></li>
<li><a href="source_localization.htm">Part III: Localizing EEG sources</a></li>
</ol>
</div>

<div class = "remark-end-list"></div>

<h1>Part III: Localizing EEG sources</h1>
<p><a href="tutorial_dipoles.htm">Back to Simulating and estimating EEG sources</a></p>
<p>In this last part of the tutorial we will attempt to solve the 
<em>EEG inverse problem</em>. That is, given a distribution of scalp 
potentials we will attempt to localize the underlying EEG sources. In fact
this is just one part of the inverse solution. The full solution involves also
the reconstruction of the temporal activation of the underlying EEG sources. 
However, we will leave that for a <a href="http://kasku.org/tutorials/connectivity">future tutorial</a> where
our EEG sources will have time-varying activation patterns. </p>
<p>In this last part of the current tutorial you may use some the sources that you generated
in  <a href="./eeg_sources.htm">Part II</a> or you may as well generate new sources altogether. I will
follow the latter approach. If you decide to use new sources then you should 
first remove the old ones (I am assuming you generated only 5 sources):</p>
<pre><code>myHead = remove_source(myHead, 1:5);
</code></pre>
<h2>Localizing a single dipole</h2>
<p>Let's generate a radial and superficial dipole:</p>
<pre><code>myHead = add_source(myHead, 'Name', 'radial', 'strength', 1, ...
    'MaxDepth', 10, 'Angle', 0)
close all;
figure;
plot_source_leadfield(myHead, 1, 'momemtum', 50)
</code></pre>
<p>Now let's plot the scalp potentials that we would measure in such a
single dipole scenario:</p>
<pre><code>figure;
plot_scalp_potentials(myHead, 'time', 1)
</code></pre>
<p>The result is shown below.</p>
<div class="highslide-gallery">
<a href="tut1_part3_dipole_superficial_radial.png" class="highslide" onclick="hs.expandDuration = 250; hs.restoreDuration = 250; return hs.expand(this)">
    <img src="remark_files/thumbnails/tut1_part3_dipole_superficial_radial-8203fa999033401f.png" alt="The source leadfield generated by a superficial and radial dipole " title="The source leadfield generated by a superficial and radial dipole " /></a>
<div class="highslide-caption">
The source leadfield generated by a superficial and radial dipole 
</div>
</div>

<p>As we have a single EEG source and there is no noise, the distribution of scalp potentials
(what we are measuring) is identical to the leadfield generated by the only
underlying EEG source (what we need for source localization). This is
obviously an ideal scenario and we would expect to be able to solve the inverse
problem accurately. Let's try:</p>
<pre><code>myHead = inverse_solution(myHead);
figure;
plot_inverse_solution_dipoles(myHead, 'time', 1);
</code></pre>
<p>The first command above will estimate the location of the source using a
Minimum Norm Estimate (MNE), which is the method employed, for instance, by
the <a href="http://www.nmr.mgh.harvard.edu/martinos/userInfo/data/MNE_register/">MNE software</a>. The generated figure is shown below:</p>
<div class="highslide-gallery">
<a href="tut1_part3_dipole_superficial_radial_localization.png" class="highslide" onclick="hs.expandDuration = 250; hs.restoreDuration = 250; return hs.expand(this)">
    <img src="remark_files/thumbnails/tut1_part3_dipole_superficial_radial_localization-7126d952ee391db4.png" alt="The inverse solution (black filled markers) and the true localization of the underlying dipole (green empty marker) " title="The inverse solution (black filled markers) and the true localization of the underlying dipole (green empty marker) " /></a>
<div class="highslide-caption">
The inverse solution (black filled markers) and the true localization of the underlying dipole (green empty marker) 
</div>
</div>

<p>Although you can barely see it in the figure above, the inverse solver estimated 
non-zero (but very small) activation strengths not only at the true location of the
dipole, but also at many other locations of the source grid. You can actually inspect the
activation values that were estimated at each source voxel with the commands:</p>
<pre><code>close all;
figure;
plot(1:myHead.NbSourceVoxels, myHead.InverseSolution.strength);
xlabel('Source grid voxel number');
ylabel('Estimated source strength');
</code></pre>
<p>which, in my case, looks like this:</p>
<div class="highslide-gallery">
<a href="tut1_part3_dipole_superficial_radial_localization_strength.png" class="highslide" onclick="hs.expandDuration = 250; hs.restoreDuration = 250; return hs.expand(this)">
    <img src="remark_files/thumbnails/tut1_part3_dipole_superficial_radial_localization_strength-44a6c3dcc5ee5828.png" alt="The source strength at each source grid location estimated by the MNE approach " title="The source strength at each source grid location estimated by the MNE approach " /></a>
<div class="highslide-caption">
The source strength at each source grid location estimated by the MNE approach 
</div>
</div>

<p>Indeed, the only source grid location at which the strength is significantly 
different from zero is voxel 245, which is also the location of the true
underlying dipole :</p>
<pre><code>myHead.Source(1)

ans =

           name: 'radial'
       strength: 1
    orientation: [0.5630 0.8133 0.1466]
          angle: 0
            pnt: 245
       momemtum: [0.5630 0.8133 0.1466]
     activation: 1
</code></pre>
<p>In your case, the location of the underlying dipole is likely to be different but, if the
inverse solver did its job, then <code>myHead.Source(1).pnt</code> should match the location of the
maximum of <code>myHead.InverseSolution.strength</code>. Let your tutor know it that is not the case!</p>
<h2>Measurement Noise</h2>
<p>To make our simulations a bit more realistic, we will add a bit of measurement noise:</p>
<pre><code>myHead = add_measurement_noise(myHead, 0.00001);
</code></pre>
<p>Now let's compare the source leadfield with the (noisy) measured scalp potentials:</p>
<pre><code>close all;
figure;
plot_source_leadfield(myHead, 1, 'momemtum', 25);
set(gcf, 'Name', 'Source leadfield');
figure;
plot_scalp_potentials(myHead, 'time', 1);
set(gcf, 'Name', 'Measured scalp potentials');
</code></pre>
<p>The two resulting figures are shown below:</p>
<div class="highslide-gallery">
<a href="tut1_part3_meas_noise_potentials.png" class="highslide" onclick="hs.expandDuration = 250; hs.restoreDuration = 250; return hs.expand(this)">
    <img src="remark_files/thumbnails/tut1_part3_meas_noise_potentials-739d631c649955ff.png" alt="The potentials measured at the scalp " title="The potentials measured at the scalp " /></a>
<div class="highslide-caption">
The potentials measured at the scalp 
</div>
<a href="tut1_part3_dipole_superficial_radial.png" class="highslide" onclick="hs.expandDuration = 250; hs.restoreDuration = 250; return hs.expand(this)">
    <img src="remark_files/thumbnails/tut1_part3_dipole_superficial_radial-8203fa999033401f.png" alt="The source leadfield generated by the underlying EEG source of interest " title="The source leadfield generated by the underlying EEG source of interest " /></a>
<div class="highslide-caption">
The source leadfield generated by the underlying EEG source of interest 
</div>
</div>

<p>As you can see the distribution of scalp potentials is (to the naked eye) identical to
 the source leadfield. Indeed the measurement noise is extremely low in our example. 
 But let's try to localize the underlying source:</p>
<pre><code>myHead = inverse_solution(myHead);
figure;
plot_inverse_solution_dipoles(myHead, 'time', 1);
figure;
plot_inverse_solution_dipoles(myHead, 'time', 1, 'exp', 4);
</code></pre>
<p>The latter command will use a higher weighting exponent for the plot so
that stronger voxel activations will appear even stronger and weak 
activations will look even weaker. The resulting figures are shown 
below:</p>
<div class="highslide-gallery">
<a href="tut1_part3_noisy_estimate.png" class="highslide" onclick="hs.expandDuration = 250; hs.restoreDuration = 250; return hs.expand(this)">
    <img src="remark_files/thumbnails/tut1_part3_noisy_estimate-023987c8cdea8a23.png" alt="Source voxel activation strength for the noisy scenario with a single EEG source " title="Source voxel activation strength for the noisy scenario with a single EEG source " /></a>
<div class="highslide-caption">
Source voxel activation strength for the noisy scenario with a single EEG source 
</div>
<a href="tut1_part3_noisy_estimate_exp4.png" class="highslide" onclick="hs.expandDuration = 250; hs.restoreDuration = 250; return hs.expand(this)">
    <img src="remark_files/thumbnails/tut1_part3_noisy_estimate_exp4-3e0c842b22a3a810.png" alt="Source voxel activation strength for the noisy scenario with a single EEG source using a higher weighting exponent, which highlights the strongest voxel activations " title="Source voxel activation strength for the noisy scenario with a single EEG source using a higher weighting exponent, which highlights the strongest voxel activations " /></a>
<div class="highslide-caption">
Source voxel activation strength for the noisy scenario with a single EEG source using a higher weighting exponent, which highlights the strongest voxel activations 
</div>
</div>

<p>Let's also plot the estimated dipole strength at each source location, in a 2D plot:</p>
<pre><code>close all;
figure;
plot(1:myHead.NbSourceVoxels, myHead.InverseSolution.strength);
xlabel('Source grid voxel number');
ylabel('Estimated source strength');
</code></pre>
<p>As you can see, the inverse estimate is completely wrong now. How is this possible, 
even if the scalp potentials were only marginally disturbed by noise? What would you 
do to try to overcome this problem?</p>
<h2>Ill-conditioning</h2>
<p>If you didn't guess it, the inverse estimate obtained from our noisy 
measurements was so poor because the leadfield matrix (i.e. the matrix of
coefficients that maps current sources to potential differences at the 
scalp) was ill-conditioned. By ill-conditioned we mean that we cannot 
directly calculate an accurate pseudoinverse of the leadfield matrix. 
Recall from the slides on <a href="https://dl.dropbox.com/u/4479286/linear_algebra.pdf">linear algebra</a> that the
 pseudoinverse ''A^+'' of leadfield matrix ''A'' is defined as:</p>
<div class = "Equation">
<span class = "Equation-Body">''A^+ = (A^T*A)^{-1}A^T''</span>
<span class = "Equation-Number">1</span>
</div>

<p>The problem here is that the term ''A^T*A'' is not invertible, due to some 
columns of ''A'' being very close to linearly dependent. You can check the
conditioning of a matrix using MATLAB's command <code>cond()</code>. Let's check the
condition number of our leadfield matrix:</p>
<pre><code>cond(myHead.SourceDipolesLeadField)

ans =

   1.2686e+16
</code></pre>
<p>Remember from the <a href="http://www.mathworks.nl/help/matlab/ref/cond.html">documentation</a> of the <code>cond()</code> command that, 
the larger the condition number, the worse the conditioning of the matrix 
is. In our case, we obtained a very large number, clearly indicating that, 
even if we still can compute the pseudoinverse, using it to recover the 
source dipoles magnitudes might lead to inaccurate results, especially in 
the presence of noise.</p>
<h3>Regularization</h3>
<p>As you learned from the course lectures, a way to deal with ill-conditioned
inverse problems is to use <a href="http://en.wikipedia.org/wiki/Tikhonov_regularization">regularization</a>. Method 
<code>inverse_solution()</code> allows you to define a regularization parameter 
''lambda'' to be used when computing the pseudoinverse of the leadfield:</p>
<pre><code>myHead = inverse_solution(myHead, 'Lambda', 0.0001);
figure;
plot_inverse_solution_dipoles(myHead, 'time', 1);
</code></pre>
<p>How does the inverse solution look like now? Play around with the 
regularization parameter (and maybe with the level of measurement noise) 
and tell your tutor what you learned. </p>
</div>
<div id="remark-footer">
<p><a href="http://kaba.hilvi.org/remark">Remark 1.5.1</a> - Page generated 23.07.2013 13:45.</p>
</div>
</div>
</body>
</html>
